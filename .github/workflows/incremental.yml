name: Check and Build New Version Artifacts

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  instrumentation_tests:

    runs-on: macos-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2.6.0

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Cache Gradle and wrapper
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}

      - name: Run Instrumentation Test
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          arch: x86
          profile: Nexus 6P
          channel: stable
          script: ./gradlew :app:connectedRecyclerProDebugAndroidTest --stacktrace

  check_and_build:

    runs-on: ubuntu-latest

    needs: instrumentation_tests

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2.6.0

      - name: Extract Version Code
        run: echo "VersionCode=$(grep 'vCode' app/version.properties | grep -o '[0-9]*')" >> $GITHUB_ENV

      - name: Fetch Git Tags
        run: git fetch --tags

      - name: Count Git Tags
        id: count_tags
        run: echo "::set-output name=tag_count::$(git tag | wc -l)"

      - name: Check for New Version
        id: check_version
        run: |
          if [ "${{ steps.count_tags.outputs.tag_count }}" -gt VersionCode ]; then
            echo "New version available!"
            echo "New version code: ${{ steps.count_tags.outputs.tag_count }}"
            echo "::set-output name=new_version::true"
          else
            echo "No new version available."
            echo "::set-output name=new_version::false"
          fi

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Generate 4 APK Artifacts
        run: ./gradlew app:assemble  # generate 4 apk artifacts

      - name: Upload recyclerStandard Debug APK
#        if: env.new_version == 'true'
        uses: actions/upload-artifact@v3.1.2
        with:
          name: recyclerStandard-debug.apk
          path: app/build/outputs/apk/recyclerStandard/debug/app-recyclerStandard-debug.apk

      - name: Upload recyclerStandard Release APK
#        if: env.new_version == 'true'
        uses: actions/upload-artifact@v3.1.2
        with:
          name: recyclerStandard-release.apk
          path: app/build/outputs/apk/recyclerStandard/release/app-recyclerStandard-release.apk

      - name: Upload recyclerPro Debug APK
#        if: env.new_version == 'true'
        uses: actions/upload-artifact@v3.1.2
        with:
          name: recyclerPro-debug.apk
          path: app/build/outputs/apk/recyclerPro/debug/app-recyclerPro-debug.apk

      - name: Upload recyclerPro Release APK
#        if: env.new_version == 'true'
        uses: actions/upload-artifact@v3.1.2
        with:
          name: recyclerPro-release.apk
          path: app/build/outputs/apk/recyclerPro/release/app-recyclerPro-release.apk



