plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

ext.kotlinVersion = "1.8.0"
ext.junitVersion = "5.10.0"
ext.espressoVersion = "3.5.1"
ext.hiltVersion = "2.44"

def propsFile = rootProject.file("app/props.properties")
def vFile = rootProject.file("app/version.properties")

// Read versionName and versionCode from external file
def props = new Properties()
props.load(new FileInputStream(propsFile))

def version = new Properties()
version.load(new FileInputStream(vFile))



android {
    signingConfigs {
        release {
            storeFile file(props.getProperty("signingPath"))
            storePassword props.getProperty("storePassword")
            keyPassword props.getProperty("keyPassword")
            keyAlias props.getProperty("keyAlias")
        }
    }
    namespace 'com.training.recycler'
    compileSdk 33

    defaultConfig {
        applicationId "com.training.recycler"
        minSdk 24
        targetSdk 33
        versionCode version.getProperty("vCode").toInteger()
        versionName version.getProperty("vName")

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            // keytool -list -keystore signing_key
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //buildConfigField "String", "BUILD_TYPE", "\"RELEASE\""
            buildConfigField "String", "BUILD_TYPE", "\"RELEASE\""
            //signingConfig signingConfigs.release
            signingConfig signingConfigs.release
        }

        debug {
            applicationIdSuffix ".debug"
            debuggable true
            buildConfigField "String", "BUILD_TYPE", "\"DEBUG\""
        }

        /**
         * The `initWith` property lets you copy configurations from other build types,
         * then configure only the settings you want to change. This one copies the debug build
         * type, and then changes the manifest placeholder and application ID.
         */
    }
    // Specifies one flavor dimension.
    flavorDimensions "version"
    productFlavors {
        recyclerStandard {
            // Assigns this product flavor to the "version" flavor dimension.
            // If you are using only one dimension, this property is optional,
            // and the plugin automatically assigns all the module's flavors to
            // that dimension.
            dimension "version"
            applicationIdSuffix ".standard"
            versionNameSuffix "-standard"
        }
        recyclerPro {
            dimension "version"
            applicationIdSuffix ".pro"
            versionNameSuffix "-pro"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
        buildConfig = true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'com.google.dagger:hilt-android:2.44'
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation platform('org.jetbrains.kotlin:kotlin-bom:1.8.0')
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.5.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'org.apache.commons:commons-csv:1.10.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.test:monitor:1.6.1'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.6.1"
    implementation 'com.squareup.okhttp3:okhttp:4.9.2'

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"

    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"


    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'

    implementation "androidx.room:room-runtime:2.3.0"
    kapt "androidx.room:room-compiler:2.3.0"
    kapt 'com.google.dagger:hilt-compiler:2.44'
    implementation "com.google.dagger:hilt-android:2.44"
    kapt "com.google.dagger:hilt-android-compiler:2.44"
    implementation "androidx.activity:activity-ktx:1.7.2"

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.11.0'

    implementation 'com.github.bumptech.glide:glide:4.12.0' // Check for the latest version
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

}